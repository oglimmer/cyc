---
## binaries

- name: Installs unzip
  apt: pkg={{ item }} state=installed update_cache={{ apt_update_cache }}
  with_items:
  - unzip

## binary&logs under /usr/local/cyc-engine-container

- name: copy engine-container.jar to tmp (ignore_change)
  copy: src=cyc-engine-container/engine-container-jar-with-dependencies.jar dest=/tmp
  changed_when: False

- name: check for changed engine-container
  shell: if [ "$(unzip -p /tmp/engine-container-jar-with-dependencies.jar -x META-INF/* | shasum)" = "$(unzip -p /usr/local/cyc-engine-container/engine-container-jar-with-dependencies.jar -x META-INF/* | shasum)" ] ; then exit 0 ; else exit 1 ; fi
  register: check_new_container
  changed_when: check_new_container.rc != 0
  ignore_errors: True
  failed_when: False 

- name: copy engine-container
  copy: src=cyc-engine-container dest=/usr/local/
  register: copied_container
  when: check_new_container.rc != 0

- name: create os user
  user: name=cyc-engine

- name: check if user tomcat7 exists
  command: grep -q '^tomcat7' /etc/passwd
  register: check_tomcat7_user
  changed_when: False
  ignore_errors: True
  failed_when: False 

- name: set user tomcat7 to group cyc-engine
  user: name=tomcat7 group=cyc-engine groups=tomcat7,mail
  when: check_tomcat7_user.rc == 0

- name: create logs
  file: path=/usr/local/cyc-engine-container/logs state=directory mode=0775 owner=cyc-engine group=cyc-engine

- name: copy start/stop script
  copy: src=scripts/run.sh dest=/usr/local/cyc-engine-container/run.sh mode=0755

- name: copy jmxtrans.xml
  template: src=roles/cyc-container/files/scripts/jmxtrans.j2 dest=/usr/local/cyc-engine-container/jmxtrans.xml mode=0755
  notify:
    - restart cyc-engine-container

## config under /etc

- name: copy start/stop script
  copy: src=scripts/cyc-engine-container dest=/etc/init.d/cyc-engine-container mode=0755
  register: copyStartStopScript

- name: create security.policy
  copy: src=scripts/security.policy dest=/usr/local/cyc-engine-container/security.policy
  when: copied_container.changed
  notify:
    - restart cyc-engine-container

- name: add permission to read the config file
  lineinfile: dest=/usr/local/cyc-engine-container/security.policy line='grant { permission java.io.FilePermission "/etc/cyc.properties", "read"; };'
  notify:
    - restart cyc-engine-container

- name: add socket permission (from WEB)
  lineinfile: dest=/usr/local/cyc-engine-container/security.policy regexp='permission java.net.SocketPermission ".*:-", "accept,resolve";' line='permission java.net.SocketPermission "{{ web_host }}:-", "accept,resolve";'
  when: engine_bind != "localhost"
  notify:
    - restart cyc-engine-container

- name: add socket permission (from localhost)
  lineinfile: dest=/usr/local/cyc-engine-container/security.policy insertbefore='permission java.net.SocketPermission "localhost", "resolve,listen";' line='permission  java.net.SocketPermission "localhost:-", "accept,resolve";'
  when: engine_bind != "localhost"
  notify:
    - restart cyc-engine-container

- name: add socket permission (from public IP)
  lineinfile: dest=/usr/local/cyc-engine-container/security.policy insertbefore='permission java.net.SocketPermission "localhost", "resolve,listen";' line='permission  java.net.SocketPermission "{{ engine_bind }}:-", "accept,resolve";'
  when: engine_bind != "localhost"
  notify:
    - restart cyc-engine-container

- name: add socket permission (to DB)
  lineinfile: dest=/usr/local/cyc-engine-container/security.policy regexp='permission java.net.SocketPermission ".*:5984", "connect,resolve";' line='permission java.net.SocketPermission "{{ couchdb_host }}:5984", "connect,resolve";'
  when: couchdb_host != "localhost"
  notify:
    - restart cyc-engine-container

- name: enable systemd for cyc-engine-container
  shell: systemctl enable cyc-engine-container.service
  when: copyStartStopScript.changed

- name: auto start
  service: name=cyc-engine-container enabled=yes
