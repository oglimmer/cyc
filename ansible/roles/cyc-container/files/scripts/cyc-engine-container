#!/bin/sh
### BEGIN INIT INFO
# Provides: cyc-engine-container
# Required-Start: $local_fs $network
# Required-Stop: $local_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start cyc-engine daemon at boot time
# Description: Enable cyc-engine service provided by daemon.
### END INIT INFO

USER="cyc-engine" 
ROOT_DIR="/usr/local/cyc-engine-container/"
SERVER="engine-container-jar-with-dependencies.jar"
LOG_FILE="/var/log/cyc-engine.log"
 
do_start()
{
        if ps -efH | grep -i java.*$SERVER | grep -v "grep" -q ; then
                echo "$SERVER is locked."        
                RETVAL=1
        fi                        

        if [ -z "$RETVAL" ] ; then
                echo -n "Starting $SERVER: "
                cd $ROOT_DIR
                if [ $(whoami) = "cyc-engine" ] || [ $(whoami) = "tomcat7" ]; then
	                echo $ROOT_DIR/run.sh
	                nohup $ROOT_DIR/run.sh </dev/null 1>>$LOG_FILE 2>&1 &
                else
	                echo sudo -b -u $USER $ROOT_DIR/run.sh
	                sudo -b -u $USER $ROOT_DIR/run.sh >>$LOG_FILE 2>&1
                fi
                RETVAL=$?
                echo                
        fi

}
do_stop()
{
        echo -n "Shutdown $SERVER: "
        AUTHENTICATION=$(grep -Po "(?m)(?<=engine\.password=).*$" /etc/cyc.properties)
        COMMAND=""
        if [ -n "$AUTHENTICATION" ]; then                
                COMMAND="Authorization:$AUTHENTICATION;"                
        fi
        BIND_IP=$(netstat -atn|grep "9998.*LISTEN"|awk '{ print $4 }'|grep -o "^[0-9]*.[0-9]*.[0-9]*.[0-9]*")
        if [ -z "$BIND_IP" ]; then
                echo "$Server not running."
        else
                echo $COMMAND"exit" | nc $BIND_IP 9998        
                if [ $? != 0 ]; then        
                        echo -n "Killing $SERVER: "
                        pid=`ps -aefw | grep "$SERVER" | grep -v " grep " | awk '{print $2}'`
                        kill -9 $pid > /dev/null 2>&1
                        RETVAL=$?        
                        [ $RETVAL -eq 0 ]
                else 
                		COUNTER=0
                        while ps -efH | grep -i java.*$SERVER | grep -v "grep" -q ; do
                                sleep 1
                                COUNTER=$((COUNTER+1))
                                if [ "$COUNTER" = 10 ]; then
                                	pid=`ps -aefw | grep "$SERVER" | grep -v " grep " | awk '{print $2}'`
                        			kill $pid > /dev/null 2>&1
                                fi
                        done
                fi
        fi

        echo
}
do_status()
{
        if ps -efH | grep -i java.*$SERVER | grep -v "grep" -q ; then
			echo "$SERVER is running."        
        else 
        	echo "$SERVER is stopped."
        fi    
}
 
case "$1" in
        start)
                do_start
                ;;
        stop)
                do_stop
                ;;
        restart)
                do_stop                
                RETVAL=
                do_start
                ;;
        status)
        		do_status
        		;;
        *)
                echo "Usage: $0 {start|stop|restart|status}"
                RETVAL=1
esac
 
exit $RETVAL
