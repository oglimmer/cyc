---

- name: Installs tomcat7 web server and other dependencies
  apt: pkg={{ item }} state=installed update_cache={{ apt_update_cache }}
  with_items:
    - tomcat7
    - tomcat7-admin
  notify:
    - restarted tomcat7

- name: Installs redis
  apt: pkg=redis-server state=installed update_cache={{ apt_update_cache }}
  when: redis

- name: copy server config
  copy: src=server.xml dest=/etc/tomcat7/server.xml
  when: tomcat_standalone and (tomcat_standalone_https == False)
  notify:
    - restarted tomcat7

- name: copy server config
  copy: src=server-https.xml dest=/etc/tomcat7/server.xml
  when: tomcat_standalone and tomcat_standalone_https
  notify:
    - restarted tomcat7

- name: allow bind to port 80/443
  lineinfile: dest=/etc/default/tomcat7 regexp='^.?AUTHBIND=' line='AUTHBIND=yes'
  when: tomcat_standalone
  notify:
    - restarted tomcat7

- name: /etc/authbind find 80
  stat: path=/etc/authbind/byport/80
  register: p  
- name: AUTHBIND creation
  file: path=/etc/authbind/byport/80 state=touch owner=tomcat7 mode=0500
  when: p.stat.exists is defined and not p.stat.exists

- name: /etc/authbind find 443
  stat: path=/etc/authbind/byport/443
  register: p
  when: tomcat_standalone_https
- name: AUTHBIND creation
  file: path=/etc/authbind/byport/443 state=touch owner=tomcat7 mode=0500
  when: p.stat.exists is defined and not p.stat.exists and tomcat_standalone_https


- name: Ubuntu 14.04 hangs on tomcat deployments when the default random generator is used
  lineinfile: dest=/etc/default/tomcat7 line="JAVA_OPTS=\"${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom\""
  notify:
    - restarted tomcat7

- name: copy strong tls cipher jar
  copy: src=local_policy.jar dest=/usr/lib/jvm/default-java/jre/lib/security/local_policy.jar
  notify: restarted tomcat7

- name: pass game-engine property file to tomat
  lineinfile: dest=/etc/default/tomcat7 line="JAVA_OPTS=\"${JAVA_OPTS} -Dcyc.home=/usr/local/cyc-engine-container -Dcyc.properties=/etc/cyc.properties\""
  notify:
    - restarted tomcat7

- name: change umask
  lineinfile: dest=/etc/default/tomcat7 line="umask 0002"
  notify:
    - restarted tomcat7

- name: set XMS to XMX
  lineinfile: dest=/etc/default/tomcat7 regexp="^JAVA_OPTS=\"-Djava.awt.headless=true" line="JAVA_OPTS=\"-Djava.awt.headless=true -Xmx384m -Xms384m -XX:+UseConcMarkSweepGC\""
  when: tomcat_standalone
  notify:
    - restarted tomcat7

- name: add user to tomcat-users-xml
  lineinfile: dest=/etc/tomcat7/tomcat-users.xml regexp="<user username=\"manager\" password.*" line="<user username=\"manager\" password=\"{{ lookup('env','TOMCAT_MANAGER_PASSWORD') }}\" roles=\"manager-gui\"/>" insertbefore="</tomcat-users>"
  when: lookup('env','TOMCAT_MANAGER_PASSWORD')|default("") != ""
  notify:
    - restarted tomcat7

- name: check if user cyc-engine exists
  command: grep -q '^cyc-engine' /etc/passwd
  register: check_cyc_engine_user
  changed_when: False
  ignore_errors: True
  failed_when: False 

- name: set user tomcat7 to group cyc-engine
  user: name=tomcat7 group=cyc-engine groups=tomcat7
  when: check_cyc_engine_user.rc == 0

- name: copy redis*.jar
  copy: src={{ item }} dest=/usr/share/tomcat7/lib
  with_items:
    - commons-pool2-2.4.2.jar
    - tomcat-redis-session-manager-1.2.jar
    - jedis-2.8.0.jar
  when: redis
  notify: restarted tomcat7

## redis config

- name: Set redis tcp-keepalive 60
  lineinfile: dest=/etc/redis/redis.conf regexp='^tcp-keepalive' line='tcp-keepalive 60'
  when: redis
  notify:
    - restarted redis-server

## haproxy config

- name: set haproxy-config
  lineinfile: dest=/etc/default/haproxy regexp='^ENABLED=' line='ENABLED=1'
  when: tomcat_standalone == False
  notify: restart haproxy

- name: add haproxy for cyr.oglimmer.de
  lineinfile: dest=/etc/haproxy/haproxy.cfg line='    acl is_cyr_oglimmer  hdr_end(host) -i cyr.oglimmer.de' insertbefore='#START-CUSTOM-OF-FRONTEND-CONFIG'
  when: tomcat_standalone == False
  notify: restart haproxy

- name: add haproxy for codeyourrestaurant.de
  lineinfile: dest=/etc/haproxy/haproxy.cfg line='    acl is_cyr_oglimmer  hdr_end(host) -i codeyourrestaurant.de' insertbefore='#START-CUSTOM-OF-FRONTEND-CONFIG'
  when: tomcat_standalone == False
  notify: restart haproxy

- name: add haproxy for codeyourrestaurant.com
  lineinfile: dest=/etc/haproxy/haproxy.cfg line='    acl is_cyr_oglimmer  hdr_end(host) -i codeyourrestaurant.com' insertbefore='#START-CUSTOM-OF-FRONTEND-CONFIG'
  when: tomcat_standalone == False
  notify: restart haproxy

- name: add haproxy backend for is_cyr_oglimmer
  lineinfile: dest=/etc/haproxy/haproxy.cfg line='    use_backend tomcat          if is_cyr_oglimmer' insertafter='#START-CUSTOM-OF-FRONTEND-CONFIG'
  when: tomcat_standalone == False
  notify: restart haproxy

## jmxtrans

- name: create jmxtrans dir
  command: mkdir -p /var/lib/tomcat7/jmxtrans creates=/var/lib/tomcat7/jmxtrans
  when: jmxtrans

- name: copy jmxtrans
  copy: src=jmxtrans/jmxtrans-agent-1.2.0.jar dest=/var/lib/tomcat7/jmxtrans/jmxtrans-agent-1.2.0.jar
  when: jmxtrans
  notify: restarted tomcat7

- name: copy jmxtrans
  file: src=/var/lib/tomcat7/jmxtrans/jmxtrans-agent-1.2.0.jar dest=/var/lib/tomcat7/jmxtrans/jmxtrans-agent.jar state=link
  when: jmxtrans
  notify: restarted tomcat7

- name: copy jmxtrans.xml
  copy: src=jmxtrans/jmxtrans.xml dest=/var/lib/tomcat7/jmxtrans/jmxtrans.xml
  when: jmxtrans
  notify: restarted tomcat7
  
- name: Add javaagent to tomcat
  lineinfile: dest=/etc/default/tomcat7 line="JAVA_OPTS=\"${JAVA_OPTS} -javaagent:/var/lib/tomcat7/jmxtrans/jmxtrans-agent.jar=/var/lib/tomcat7/jmxtrans/jmxtrans.xml\""
  when: jmxtrans
  notify:
    - restarted tomcat7
  
  